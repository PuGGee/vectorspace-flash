package  {	import Box2D.Dynamics.*;	import Box2D.Collision.*;	import Box2D.Collision.Shapes.*;	import Box2D.Dynamics.Joints.*;	import Box2D.Dynamics.Contacts.*;	import Box2D.Common.*;	import Box2D.Common.Math.*;	import Helpers.*;		class ImpulseDamageListener extends b2ContactListener {				public var listener:WorldController;				public function ImpulseDamageListener( listener:WorldController ) {						this.listener = listener;					}				override public function PostSolve( contact:b2Contact, impulses:b2ContactImpulse ):void {						var impulseTotal:Number = 0;			for ( var i:int = 0; i < impulses.normalImpulses.length; i++ ) {				impulseTotal += impulses.normalImpulses[ i ];			}			impulseTotal = impulseTotal * 3 / impulses.normalImpulses.length;						var manifold:b2WorldManifold = new b2WorldManifold();			contact.GetWorldManifold( manifold );						var ship:Damageable = getDamageable( contact.GetFixtureA() );			if ( ship != null ) {				ship.shock( impulseTotal, manifold.m_points[0].Copy(), manifold.m_normal );			}						ship = getDamageable( contact.GetFixtureB() );			if ( ship != null ) {				ship.shock( impulseTotal, manifold.m_points[0].Copy(), manifold.m_normal );			}						if ( contact.GetFixtureA().GetUserData() && contact.GetFixtureB().GetBody().GetUserData() ) {				if ( contact.GetFixtureA().GetUserData().type == 'dock' && contact.GetFixtureB().GetBody().GetUserData().type == 'player' ) {					listener.dock( contact.GetFixtureA().GetUserData().station );				}			} else if ( contact.GetFixtureA().GetBody().GetUserData() && contact.GetFixtureB().GetUserData() ) {				if ( contact.GetFixtureA().GetBody().GetUserData().type == 'player' && contact.GetFixtureB().GetUserData().type == 'dock' ) {					listener.dock( contact.GetFixtureB().GetUserData().station );				}			}					}			}}